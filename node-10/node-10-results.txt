Piping now
Event 'pipe' received on TestWritableStream: event data = {
  "_readableState": {
    "objectMode": false,
    "highWaterMark": 16384,
    "buffer": {
      "head": null,
      "tail": null,
      "length": 0
    },
    "length": 0,
    "pipes": {
      "_writableState": {
        "objectMode": false,
        "highWaterMark": 16384,
        "finalCalled": false,
        "needDrain": false,
        "ending": false,
        "ended": false,
        "finished": false,
        "destroyed": false,
        "decodeStrings": true,
        "defaultEncoding": "utf8",
        "length": 0,
        "writing": false,
        "corked": 0,
        "sync": true,
        "bufferProcessing": false,
        "writecb": null,
        "writelen": 0,
        "bufferedRequest": null,
        "lastBufferedRequest": null,
        "pendingcb": 0,
        "prefinished": false,
        "errorEmitted": false,
        "emitClose": true,
        "autoDestroy": false,
        "bufferedRequestCount": 0,
        "corkedRequestsFree": {
          "next": null,
          "entry": null
        }
      },
      "writable": true,
      "_events": {
        "unpipe": [
          null,
          null
        ],
        "drain": [
          null,
          null
        ],
        "close": [
          null,
          null
        ],
        "error": [
          null,
          null
        ],
        "finish": [
          null,
          null
        ]
      },
      "_eventsCount": 7,
      "bufferedData": []
    },
    "pipesCount": 1,
    "flowing": false,
    "ended": false,
    "endEmitted": false,
    "reading": false,
    "sync": true,
    "needReadable": true,
    "emittedReadable": false,
    "readableListening": true,
    "resumeScheduled": false,
    "paused": true,
    "emitClose": true,
    "autoDestroy": false,
    "destroyed": false,
    "defaultEncoding": "utf8",
    "awaitDrain": 0,
    "readingMore": false,
    "decoder": null,
    "encoding": null
  },
  "readable": true,
  "_events": {
    "readable": [
      null,
      null
    ],
    "data": [
      null,
      null
    ],
    "end": [
      null,
      null
    ]
  },
  "_eventsCount": 5
}
Piped, but no data sent yet
Pushing data to TestReadableStream processStdout
TestReadableStream.read() called. Calling super.read()
Data successfully pushed TestReadableStream processStdout
TestReadableStream.read() called. Calling super.read()
Data successfully pushed TestReadableStream processStdout
TestReadableStream.read() called. Calling super.read()
Data successfully pushed TestReadableStream processStdout
TestReadableStream.read() called. Calling super.read()
Data successfully pushed TestReadableStream processStdout
TestReadableStream.read() called. Calling super.read()
Data successfully pushed TestReadableStream processStdout
TestReadableStream.read() called. Calling super.read()
Data successfully pushed TestReadableStream processStdout
TestReadableStream.read() called. Calling super.read()
Data successfully pushed TestReadableStream processStdout
TestReadableStream.read() called. Calling super.read()
Data successfully pushed TestReadableStream processStdout
TestReadableStream.read() called. Calling super.read()
Data successfully pushed TestReadableStream processStdout
TestReadableStream.read() called. Calling super.read()
Data successfully pushed TestReadableStream processStdout
TestReadableStream.read() called. Calling super.read()
Data successfully pushed TestReadableStream processStdout
TestReadableStream.read() called. Calling super.read()
Data successfully pushed TestReadableStream processStdout
TestReadableStream.read() called. Calling super.read()
Data successfully pushed TestReadableStream processStdout
TestReadableStream.read() called. Calling super.read()
Data successfully pushed TestReadableStream processStdout
TestReadableStream.read() called. Calling super.read()
Data successfully pushed TestReadableStream processStdout
TestReadableStream.read() called. Calling super.read()
Data successfully pushed TestReadableStream processStdout
TestReadableStream.read() called. Calling super.read()
Data successfully pushed TestReadableStream processStdout
TestReadableStream.read() called. Calling super.read()
Data successfully pushed TestReadableStream processStdout
TestReadableStream.read() called. Calling super.read()
Data successfully pushed TestReadableStream processStdout
TestReadableStream.read() called. Calling super.read()
Data successfully pushed TestReadableStream processStdout
TestReadableStream.read() called. Calling super.read()
Data successfully pushed TestReadableStream processStdout
TestReadableStream.read() called. Calling super.read()
Data successfully pushed TestReadableStream processStdout
TestReadableStream.read() called. Calling super.read()
Data successfully pushed TestReadableStream processStdout
TestReadableStream.read() called. Calling super.read()
Data successfully pushed TestReadableStream processStdout
TestReadableStream.read() called. Calling super.read()
Data successfully pushed TestReadableStream processStdout
TestReadableStream.read() called. Calling super.read()
Data successfully pushed TestReadableStream processStdout
TestReadableStream.read() called. Calling super.read()
Data successfully pushed TestReadableStream processStdout
TestReadableStream.read() called. Calling super.read()
Data successfully pushed TestReadableStream processStdout
TestReadableStream.read() called. Calling super.read()
Data successfully pushed TestReadableStream processStdout
TestReadableStream.read() called. Calling super.read()
Data successfully pushed TestReadableStream processStdout
Completed pushing data to TestReadableStream processStdout
Pushing null to TestReadableStream processStdout to end stream
TestReadableStream.read() called. Calling super.read()
SCRIPT COMPLETE.
Event 'readable' received on TestReadableStream: event data = undefined
